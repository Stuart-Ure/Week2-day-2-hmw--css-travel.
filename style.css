body {
  /* Set the font-family for the entire body to Roboto with a generic family of sans-serif - done */
  /* Hint: https://developer.mozilla.org/en-US/docs/Web/CSS/font-family */

  font-family: Roboto, sans-serif 
}

header {
  /* 
  - Give the header a height of 4rem and background color (#4584b1). What is a rem? - done
  Hint: https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units
  - Give the text a color of #fff and make the font size 2 rem - done
  - Use flexbox to vertically align the "CodeClan Travel" logo in the center - done
  Hint: https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
  */

  height: 4rem;
  background-color: #4584b1 ;
  color: #fff ;
  font-size: 2rem;
  display: flex;
  align-items: center;
}

#logo {
  /* The logo element has an id of logo */
  /* Give the logo element a left margin of 40px - done*/ 

margin-left: 40px;
}

nav {
  /* Give the nav a background color (#103594) */
  /* Use rem units to give the nav an appropriate height */
  /* Use flexbox to vertially align the nav child elements in the center */

  background-color: #103594; 
  height: 2rem;
  display: flex;
  align-items: center;

}

nav ul {
  /* Use flexbox to layout the li elements horizontally */
display: flex;
gap: 2rem;
list-style: none;
}

/* Now it's time for the navigation links */
/* Create a CSS block that targets all of the <li> elements that are children of the <nav> element */
/* Use the following properties inside the block. */
/* We haven't provided the values in this case so use the values you think would be appropriate:
  - color
  - font-size
  - list-style
  - margin-right
*/

nav>ul>li>a{
  font-size: 1rem;
  color: #fff;
  margin-right: -0rem;
  text-decoration: none
  
}
nav>ul>li>a:hover{
  text-decoration: underline;
}

.where-togo {
background-color: #040E27;
padding: 1rem
}

body>main>section>h3{
  font-size: 2rem;
  color: white;
}

body>main>section>form{
  display: flex;
  align-items: center;
  gap: 0rem;
  
}


/* The search form has a class of search-form. We want the input fields to  */
/* display horizontally. The easiest way to make a group of elements horizontal is to use flexbox */
/* Create a block that targets the search-form class and give it a display of flex */

/* Notice that each form input is wrapped in a div */
/* Create a block that targets the input-field class and apply a suitable width and margin */

/* Styling the elements of Forms is difficult. */
/* Hint: https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling */

input {
  /* Style the form input elements using width, height, padding-left and border-radius */

  width: 16rem;
  height: 3rem;
  padding-left: 4rem;
  border-radius: 5px;
}

.nice-select {
  /* Select elements are not imput elements! Therefore we've given the <select> element it's own class  */
  /* They are notoriously difficult to style with css */
  /* In this case you can use width, height, font-size, color, border and border-radius */
  width: 16rem;
  height: 3rem;
  padding-left: 4rem;
  border-radius: 5px;
}

.search-btn {
  /* Buttons are probably the most fun to style! The border-radius and cursor properties can quickly make a button look good */
  /* Style the search button using the following properties: */
  /* 
background
  - color
  - font-size
  - height
  - width
  - border
  - border-radius
  - cursor
  */
background: rgb(255, 51, 0);
color: #fff;
font-size: 1rem;
height: 3rem;
width: 6rem;
border: 5px;
border-radius: 5px;
cursor: default;
}

.container { 
  
  display: grid;
  grid-template-areas:
  'single destination single destination single destination'
  'single destination single destination single destination';
  grid-template-columns: repeat(3, 1fr);
  justify-content: center;
  
}
  /* The destinations are enclosed in an article element that we want to make a grid */
  /* Set the display property to 'grid' and justify the content */



.row {
  /* The row of the grid has 3 columns which should be the same width and roughly a third of the available space */
  /* Use the grid-template-columns property to set each column to 30% */
  /* You can experiment with different units for the width values */
  /* Hint: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns */
  grid-template-columns: 30% 30% 30%;
}

.section-title {

  display: flex;
  align-items: center;
  justify-content: center;
  /* The <div> with class section-title contains an <h3> child which we want to center */
  /* The easiest way to center child elements is to set the display property to 'flex' and justify the content */
}

.single-destination {
  /* Use the margin property to make some space between the destinations */
  /* Set the overflow to 'hidden' */
  /* The overflow CSS shorthand property sets the desired behaviour for an element's overflow 
    â€” i.e. when an element's content is too big to fit. In this case, the image is too big too fit. */
    margin: 4em;
    margin: 1px;
    overflow: hidden 
}

img {
  /* Set the max-width property to 100% */
  max-width: 100%;
}

/* Let's take the training wheels off. Finish off the page by adding styles to the remaining blocks */

.testimonial-area {
  /* Write your code here */
  display: grid;
  justify-content: center;
  background-color: rgb(95, 96, 112);
  padding: 10px;
  align-items: center;
}

.single-testmonial{
  /* Write your code here */
  color: rgb(178, 161, 140);
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: -1rem;
  margin: 20px;
  height: 90%;
  width: 90%;
  text-align: center;
  font-size: 16px;
  border-radius: 5px;
  background-color: rgb(205, 223, 223)


}

.footer {
  /* Write your code here */
  background-color: #040E27;
  padding: 5rem;
  color: white

}

.footer-widget p {
  /* Write your code here */
  color: gray;
}

.footer-widget a:hover {
   /* Write your code here */
}

.footer-widget ul li {
  /* Write your code here */
  color: white;
}

.footer-widget a {
   /* Write your code here */
  color: gray;
}

/* Media Queries */

@media (max-width: 720px) {
    /* Add some responsive code here */
    /* Make the destinations stack on top of each other */
    /* Make the form input stack on top of each other */
}